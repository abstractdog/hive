PREHOOK: query: explain
with customer_total_return as
 (select wr_returning_customer_sk as ctr_customer_sk
        ,ca_state as ctr_state, 
 	sum(wr_return_amt) as ctr_total_return
 from web_returns
     ,date_dim
     ,customer_address
 where wr_returned_date_sk = d_date_sk 
   and d_year =2002
   and wr_returning_addr_sk = ca_address_sk 
 group by wr_returning_customer_sk
         ,ca_state)
  select  c_customer_id,c_salutation,c_first_name,c_last_name,c_preferred_cust_flag
       ,c_birth_day,c_birth_month,c_birth_year,c_birth_country,c_login,c_email_address
       ,c_last_review_date,ctr_total_return
 from customer_total_return ctr1
     ,customer_address
     ,customer
 where ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2
 			  from customer_total_return ctr2 
                  	  where ctr1.ctr_state = ctr2.ctr_state)
       and ca_address_sk = c_current_addr_sk
       and ca_state = 'IL'
       and ctr1.ctr_customer_sk = c_customer_sk
 order by c_customer_id,c_salutation,c_first_name,c_last_name,c_preferred_cust_flag
                  ,c_birth_day,c_birth_month,c_birth_year,c_birth_country,c_login,c_email_address
                  ,c_last_review_date,ctr_total_return
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@web_returns
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
with customer_total_return as
 (select wr_returning_customer_sk as ctr_customer_sk
        ,ca_state as ctr_state, 
 	sum(wr_return_amt) as ctr_total_return
 from web_returns
     ,date_dim
     ,customer_address
 where wr_returned_date_sk = d_date_sk 
   and d_year =2002
   and wr_returning_addr_sk = ca_address_sk 
 group by wr_returning_customer_sk
         ,ca_state)
  select  c_customer_id,c_salutation,c_first_name,c_last_name,c_preferred_cust_flag
       ,c_birth_day,c_birth_month,c_birth_year,c_birth_country,c_login,c_email_address
       ,c_last_review_date,ctr_total_return
 from customer_total_return ctr1
     ,customer_address
     ,customer
 where ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2
 			  from customer_total_return ctr2 
                  	  where ctr1.ctr_state = ctr2.ctr_state)
       and ca_address_sk = c_current_addr_sk
       and ca_state = 'IL'
       and ctr1.ctr_customer_sk = c_customer_sk
 order by c_customer_id,c_salutation,c_first_name,c_last_name,c_preferred_cust_flag
                  ,c_birth_day,c_birth_month,c_birth_year,c_birth_country,c_login,c_email_address
                  ,c_last_review_date,ctr_total_return
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@web_returns
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Reducer 9 (SIMPLE_EDGE)
Reducer 12 <- Map 11 (SIMPLE_EDGE), Map 14 (SIMPLE_EDGE)
Reducer 13 <- Map 11 (SIMPLE_EDGE), Map 14 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 5 (SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (SIMPLE_EDGE), Reducer 8 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
Reducer 6 <- Map 5 (SIMPLE_EDGE), Reducer 12 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)
Reducer 8 <- Reducer 10 (SIMPLE_EDGE), Reducer 7 (SIMPLE_EDGE)
Reducer 9 <- Map 5 (SIMPLE_EDGE), Reducer 13 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 4 vectorized
      File Output Operator [FS_145]
        Limit [LIM_144] (rows=100 width=942)
          Number of rows:100
          Select Operator [SEL_143] (rows=601923 width=942)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10","_col11","_col12"]
          <-Reducer 3 [SIMPLE_EDGE]
            SHUFFLE [RS_66]
              Select Operator [SEL_65] (rows=601923 width=942)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10","_col11","_col12"]
                Merge Join Operator [MERGEJOIN_110] (rows=601923 width=942)
                  Conds:RS_62._col0=RS_63._col0(Inner),Output:["_col1","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10","_col11","_col12","_col13","_col17"]
                <-Reducer 2 [SIMPLE_EDGE]
                  SHUFFLE [RS_62]
                    PartitionCols:_col0
                    Merge Join Operator [MERGEJOIN_104] (rows=1568628 width=834)
                      Conds:RS_113._col2=RS_120._col0(Inner),Output:["_col0","_col1","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10","_col11","_col12","_col13"]
                    <-Map 5 [SIMPLE_EDGE] vectorized
                      SHUFFLE [RS_120]
                        PartitionCols:_col0
                        Select Operator [SEL_117] (rows=784314 width=4)
                          Output:["_col0"]
                          Filter Operator [FIL_114] (rows=784314 width=90)
                            predicate:(ca_state = 'IL')
                            TableScan [TS_3] (rows=40000000 width=90)
                              default@customer_address,customer_address,Tbl:COMPLETE,Col:COMPLETE,Output:["ca_address_sk","ca_state"]
                    <-Map 1 [SIMPLE_EDGE] vectorized
                      SHUFFLE [RS_113]
                        PartitionCols:_col2
                        Select Operator [SEL_112] (rows=80000000 width=849)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10","_col11","_col12","_col13"]
                          Filter Operator [FIL_111] (rows=80000000 width=849)
                            predicate:c_current_addr_sk is not null
                            TableScan [TS_0] (rows=80000000 width=849)
                              default@customer,customer,Tbl:COMPLETE,Col:COMPLETE,Output:["c_customer_sk","c_customer_id","c_current_addr_sk","c_salutation","c_first_name","c_last_name","c_preferred_cust_flag","c_birth_day","c_birth_month","c_birth_year","c_birth_country","c_login","c_email_address","c_last_review_date"]
                <-Reducer 8 [SIMPLE_EDGE]
                  SHUFFLE [RS_63]
                    PartitionCols:_col0
                    Select Operator [SEL_58] (rows=613960 width=227)
                      Output:["_col0","_col2"]
                      Filter Operator [FIL_57] (rows=613960 width=227)
                        predicate:(_col2 > _col3)
                        Merge Join Operator [MERGEJOIN_109] (rows=1841880 width=227)
                          Conds:RS_136._col1=RS_142._col1(Inner),Output:["_col0","_col2","_col3"]
                        <-Reducer 10 [SIMPLE_EDGE] vectorized
                          SHUFFLE [RS_142]
                            PartitionCols:_col1
                            Select Operator [SEL_141] (rows=6 width=198)
                              Output:["_col0","_col1"]
                              Filter Operator [FIL_140] (rows=6 width=206)
                                predicate:(_col1 is not null and _col2 is not null)
                                Group By Operator [GBY_139] (rows=6 width=206)
                                  Output:["_col0","_col1","_col2"],aggregations:["sum(_col2)","count(_col2)"],keys:_col0
                                  Select Operator [SEL_138] (rows=2537976 width=201)
                                    Output:["_col0","_col2"]
                                    Group By Operator [GBY_137] (rows=2537976 width=201)
                                      Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1
                                    <-Reducer 9 [SIMPLE_EDGE]
                                      SHUFFLE [RS_45]
                                        PartitionCols:_col0
                                        Group By Operator [GBY_44] (rows=3923529 width=201)
                                          Output:["_col0","_col1","_col2"],aggregations:["sum(_col3)"],keys:_col6, _col1
                                          Merge Join Operator [MERGEJOIN_108] (rows=3923529 width=184)
                                            Conds:RS_40._col2=RS_122._col0(Inner),Output:["_col1","_col3","_col6"]
                                          <-Map 5 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_122]
                                              PartitionCols:_col0
                                              Select Operator [SEL_119] (rows=40000000 width=90)
                                                Output:["_col0","_col1"]
                                                Filter Operator [FIL_116] (rows=40000000 width=90)
                                                  predicate:ca_state is not null
                                                   Please refer to the previous TableScan [TS_3]
                                          <-Reducer 13 [SIMPLE_EDGE]
                                            SHUFFLE [RS_40]
                                              PartitionCols:_col2
                                              Merge Join Operator [MERGEJOIN_107] (rows=3923529 width=101)
                                                Conds:RS_128._col0=RS_132._col0(Inner),Output:["_col1","_col2","_col3"]
                                              <-Map 11 [SIMPLE_EDGE] vectorized
                                                SHUFFLE [RS_128]
                                                  PartitionCols:_col0
                                                  Select Operator [SEL_126] (rows=13130761 width=118)
                                                    Output:["_col0","_col1","_col2","_col3"]
                                                    Filter Operator [FIL_124] (rows=13130761 width=118)
                                                      predicate:(wr_returned_date_sk is not null and wr_returning_addr_sk is not null)
                                                      TableScan [TS_6] (rows=14398467 width=118)
                                                        default@web_returns,web_returns,Tbl:COMPLETE,Col:COMPLETE,Output:["wr_returned_date_sk","wr_returning_customer_sk","wr_returning_addr_sk","wr_return_amt"]
                                              <-Map 14 [SIMPLE_EDGE] vectorized
                                                SHUFFLE [RS_132]
                                                  PartitionCols:_col0
                                                  Select Operator [SEL_130] (rows=652 width=4)
                                                    Output:["_col0"]
                                                    Filter Operator [FIL_129] (rows=652 width=8)
                                                      predicate:(d_year = 2002)
                                                      TableScan [TS_9] (rows=73049 width=8)
                                                        default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year"]
                        <-Reducer 7 [SIMPLE_EDGE] vectorized
                          SHUFFLE [RS_136]
                            PartitionCols:_col1
                            Filter Operator [FIL_135] (rows=1841880 width=201)
                              predicate:_col2 is not null
                              Select Operator [SEL_134] (rows=1841880 width=201)
                                Output:["_col0","_col1","_col2"]
                                Group By Operator [GBY_133] (rows=1841880 width=201)
                                  Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1
                                <-Reducer 6 [SIMPLE_EDGE]
                                  SHUFFLE [RS_23]
                                    PartitionCols:_col0, _col1
                                    Group By Operator [GBY_22] (rows=3746772 width=201)
                                      Output:["_col0","_col1","_col2"],aggregations:["sum(_col3)"],keys:_col6, _col1
                                      Merge Join Operator [MERGEJOIN_106] (rows=3746772 width=184)
                                        Conds:RS_18._col2=RS_121._col0(Inner),Output:["_col1","_col3","_col6"]
                                      <-Map 5 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_121]
                                          PartitionCols:_col0
                                          Select Operator [SEL_118] (rows=40000000 width=90)
                                            Output:["_col0","_col1"]
                                            Filter Operator [FIL_115] (rows=40000000 width=90)
                                              predicate:ca_state is not null
                                               Please refer to the previous TableScan [TS_3]
                                      <-Reducer 12 [SIMPLE_EDGE]
                                        SHUFFLE [RS_18]
                                          PartitionCols:_col2
                                          Merge Join Operator [MERGEJOIN_105] (rows=3746772 width=101)
                                            Conds:RS_127._col0=RS_131._col0(Inner),Output:["_col1","_col2","_col3"]
                                          <-Map 11 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_127]
                                              PartitionCols:_col0
<<<<<<< HEAD
                                              Select Operator [SEL_125] (rows=12539215 width=118)
                                                Output:["_col0","_col1","_col2","_col3"]
                                                Filter Operator [FIL_123] (rows=12539215 width=118)
                                                  predicate:(wr_returned_date_sk is not null and wr_returning_addr_sk is not null and wr_returning_customer_sk is not null)
=======
                                              Select Operator [SEL_195] (rows=12539214 width=118)
                                                Output:["_col0","_col1","_col2","_col3"]
                                                Filter Operator [FIL_193] (rows=12539214 width=118)
                                                  predicate:(wr_returning_customer_sk is not null and wr_returned_date_sk is not null and wr_returning_addr_sk is not null)
>>>>>>> 18a5dcb95b... HIVE-21857: Sort conditions in a filter predicate to accelerate query processing (Jesus Camacho Rodriguez, reviewed by Vineet Garg)
                                                   Please refer to the previous TableScan [TS_6]
                                          <-Map 14 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_131]
                                              PartitionCols:_col0
                                               Please refer to the previous Select Operator [SEL_130]

