PREHOOK: query: DESCRIBE FUNCTION trunc
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION trunc
POSTHOOK: type: DESCFUNCTION
trunc(date, fmt) / trunc(N,D) - Returns If input is date returns date with the time portion of the day truncated to the unit specified by the format model fmt. If you omit fmt, then date is truncated to the nearest day. It currently only supports 'MONTH'/'MON'/'MM', 'QUARTER'/'Q' and 'YEAR'/'YYYY'/'YY' as format.If input is a number group returns N truncated to D decimal places. If D is omitted, then N is truncated to 0 places.D can be negative to truncate (make zero) D digits left of the decimal point.
PREHOOK: query: DESCRIBE FUNCTION EXTENDED trunc
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED trunc
POSTHOOK: type: DESCFUNCTION
trunc(date, fmt) / trunc(N,D) - Returns If input is date returns date with the time portion of the day truncated to the unit specified by the format model fmt. If you omit fmt, then date is truncated to the nearest day. It currently only supports 'MONTH'/'MON'/'MM', 'QUARTER'/'Q' and 'YEAR'/'YYYY'/'YY' as format.If input is a number group returns N truncated to D decimal places. If D is omitted, then N is truncated to 0 places.D can be negative to truncate (make zero) D digits left of the decimal point.
date is a string in the format 'yyyy-MM-dd HH:mm:ss' or 'yyyy-MM-dd'. The time part of date is ignored.
Example:
  > SELECT trunc('2009-02-12', 'MM');
OK
 '2009-02-01'
 > SELECT trunc('2017-03-15', 'Q');
OK
 '2017-01-01'
 > SELECT trunc('2015-10-27', 'YEAR');
OK
 '2015-01-01' > SELECT trunc(1234567891.1234567891,4);
OK
 1234567891.1234
 > SELECT trunc(1234567891.1234567891,-4);
OK
 1234560000 > SELECT trunc(1234567891.1234567891,0);
OK
 1234567891
 > SELECT trunc(1234567891.1234567891);
OK
 1234567891
Function class:org.apache.hadoop.hive.ql.udf.generic.GenericUDFTrunc
Function type:BUILTIN
PREHOOK: query: CREATE TABLE trunc_number_text(c DOUBLE, d INT)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@trunc_number_text
POSTHOOK: query: CREATE TABLE trunc_number_text(c DOUBLE, d INT)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@trunc_number_text
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/trunc_number.txt' INTO TABLE trunc_number_text
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@trunc_number_text
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/trunc_number.txt' INTO TABLE trunc_number_text
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@trunc_number_text
PREHOOK: query: CREATE TABLE trunc_number(c DOUBLE, d INT) STORED AS ORC
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@trunc_number
POSTHOOK: query: CREATE TABLE trunc_number(c DOUBLE, d INT) STORED AS ORC
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@trunc_number
PREHOOK: query: INSERT INTO TABLE trunc_number SELECT * FROM trunc_number_text
PREHOOK: type: QUERY
PREHOOK: Input: default@trunc_number_text
PREHOOK: Output: default@trunc_number
POSTHOOK: query: INSERT INTO TABLE trunc_number SELECT * FROM trunc_number_text
POSTHOOK: type: QUERY
POSTHOOK: Input: default@trunc_number_text
POSTHOOK: Output: default@trunc_number
POSTHOOK: Lineage: trunc_number.c SIMPLE [(trunc_number_text)trunc_number_text.FieldSchema(name:c, type:double, comment:null), ]
POSTHOOK: Lineage: trunc_number.d SIMPLE [(trunc_number_text)trunc_number_text.FieldSchema(name:d, type:int, comment:null), ]
PREHOOK: query: explain vectorization detail select trunc(ctimestamp1, 'MM') from alltypesorc
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: explain vectorization detail select trunc(ctimestamp1, 'MM') from alltypesorc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: alltypesorc
            Statistics: Num rows: 12288 Data size: 491520 Basic stats: COMPLETE Column stats: COMPLETE
            TableScan Vectorization:
                native: true
                vectorizationSchemaColumns: [0:ctinyint:tinyint, 1:csmallint:smallint, 2:cint:int, 3:cbigint:bigint, 4:cfloat:float, 5:cdouble:double, 6:cstring1:string, 7:cstring2:string, 8:ctimestamp1:timestamp, 9:ctimestamp2:timestamp, 10:cboolean1:boolean, 11:cboolean2:boolean, 12:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
            Select Operator
              expressions: trunc(ctimestamp1, 'MM') (type: string)
              outputColumnNames: _col0
              Select Vectorization:
                  className: VectorSelectOperator
                  native: true
                  projectedOutputColumnNums: [13]
                  selectExpressions: TruncDateFromTimestamp(col 8, format MM) -> 13:string
              Statistics: Num rows: 12288 Data size: 2260992 Basic stats: COMPLETE Column stats: COMPLETE
              File Output Operator
                compressed: false
                File Sink Vectorization:
                    className: VectorFileSinkOperator
                    native: false
                Statistics: Num rows: 12288 Data size: 2260992 Basic stats: COMPLETE Column stats: COMPLETE
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
          inputFormatFeatureSupport: [DECIMAL_64]
          featureSupportInUse: [DECIMAL_64]
          inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
          allNative: false
          usesVectorUDFAdaptor: false
          vectorized: true
          rowBatchContext:
              dataColumnCount: 12
              includeColumns: [8]
              dataColumns: ctinyint:tinyint, csmallint:smallint, cint:int, cbigint:bigint, cfloat:float, cdouble:double, cstring1:string, cstring2:string, ctimestamp1:timestamp, ctimestamp2:timestamp, cboolean1:boolean, cboolean2:boolean
              partitionColumnCount: 0
              scratchColumnTypeNames: [string]

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select trunc(ctimestamp1, 'MM'), ctimestamp1 from alltypesorc LIMIT 10
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: select trunc(ctimestamp1, 'MM'), ctimestamp1 from alltypesorc LIMIT 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
1969-12-01	1969-12-31 15:59:46.674
NULL	NULL
1969-12-01	1969-12-31 15:59:55.787
1969-12-01	1969-12-31 15:59:44.187
1969-12-01	1969-12-31 15:59:50.434
1969-12-01	1969-12-31 16:00:15.007
1969-12-01	1969-12-31 16:00:07.021
1969-12-01	1969-12-31 16:00:04.963
1969-12-01	1969-12-31 15:59:52.176
1969-12-01	1969-12-31 15:59:44.569
PREHOOK: query: select trunc(ctimestamp1, 'Q'), ctimestamp1 from alltypesorc LIMIT 10
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: select trunc(ctimestamp1, 'Q'), ctimestamp1 from alltypesorc LIMIT 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
1969-10-01	1969-12-31 15:59:46.674
NULL	NULL
1969-10-01	1969-12-31 15:59:55.787
1969-10-01	1969-12-31 15:59:44.187
1969-10-01	1969-12-31 15:59:50.434
1969-10-01	1969-12-31 16:00:15.007
1969-10-01	1969-12-31 16:00:07.021
1969-10-01	1969-12-31 16:00:04.963
1969-10-01	1969-12-31 15:59:52.176
1969-10-01	1969-12-31 15:59:44.569
PREHOOK: query: select trunc(ctimestamp1, 'YEAR'), ctimestamp1 from alltypesorc LIMIT 10
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: select trunc(ctimestamp1, 'YEAR'), ctimestamp1 from alltypesorc LIMIT 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
1969-01-01	1969-12-31 15:59:46.674
NULL	NULL
1969-01-01	1969-12-31 15:59:55.787
1969-01-01	1969-12-31 15:59:44.187
1969-01-01	1969-12-31 15:59:50.434
1969-01-01	1969-12-31 16:00:15.007
1969-01-01	1969-12-31 16:00:07.021
1969-01-01	1969-12-31 16:00:04.963
1969-01-01	1969-12-31 15:59:52.176
1969-01-01	1969-12-31 15:59:44.569
PREHOOK: query: explain vectorization detail select trunc(CAST(ctimestamp1 AS STRING), 'MM') from alltypesorc
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: explain vectorization detail select trunc(CAST(ctimestamp1 AS STRING), 'MM') from alltypesorc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: alltypesorc
            Statistics: Num rows: 12288 Data size: 491520 Basic stats: COMPLETE Column stats: COMPLETE
            TableScan Vectorization:
                native: true
                vectorizationSchemaColumns: [0:ctinyint:tinyint, 1:csmallint:smallint, 2:cint:int, 3:cbigint:bigint, 4:cfloat:float, 5:cdouble:double, 6:cstring1:string, 7:cstring2:string, 8:ctimestamp1:timestamp, 9:ctimestamp2:timestamp, 10:cboolean1:boolean, 11:cboolean2:boolean, 12:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
            Select Operator
              expressions: trunc(CAST( ctimestamp1 AS STRING), 'MM') (type: string)
              outputColumnNames: _col0
              Select Vectorization:
                  className: VectorSelectOperator
                  native: true
                  projectedOutputColumnNums: [14]
                  selectExpressions: TruncDateFromString(col 13, format MM)(children: CastTimestampToString(col 8:timestamp) -> 13:string) -> 14:string
              Statistics: Num rows: 12288 Data size: 2260992 Basic stats: COMPLETE Column stats: COMPLETE
              File Output Operator
                compressed: false
                File Sink Vectorization:
                    className: VectorFileSinkOperator
                    native: false
                Statistics: Num rows: 12288 Data size: 2260992 Basic stats: COMPLETE Column stats: COMPLETE
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
          inputFormatFeatureSupport: [DECIMAL_64]
          featureSupportInUse: [DECIMAL_64]
          inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
          allNative: false
          usesVectorUDFAdaptor: false
          vectorized: true
          rowBatchContext:
              dataColumnCount: 12
              includeColumns: [8]
              dataColumns: ctinyint:tinyint, csmallint:smallint, cint:int, cbigint:bigint, cfloat:float, cdouble:double, cstring1:string, cstring2:string, ctimestamp1:timestamp, ctimestamp2:timestamp, cboolean1:boolean, cboolean2:boolean
              partitionColumnCount: 0
              scratchColumnTypeNames: [string, string]

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select trunc(CAST(ctimestamp1 AS STRING), 'MM'), ctimestamp1 from alltypesorc LIMIT 10
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: select trunc(CAST(ctimestamp1 AS STRING), 'MM'), ctimestamp1 from alltypesorc LIMIT 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
1969-12-01	1969-12-31 15:59:46.674
NULL	NULL
1969-12-01	1969-12-31 15:59:55.787
1969-12-01	1969-12-31 15:59:44.187
1969-12-01	1969-12-31 15:59:50.434
1969-12-01	1969-12-31 16:00:15.007
1969-12-01	1969-12-31 16:00:07.021
1969-12-01	1969-12-31 16:00:04.963
1969-12-01	1969-12-31 15:59:52.176
1969-12-01	1969-12-31 15:59:44.569
PREHOOK: query: select trunc(CAST(ctimestamp1 AS STRING), 'Q'), ctimestamp1 from alltypesorc LIMIT 10
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: select trunc(CAST(ctimestamp1 AS STRING), 'Q'), ctimestamp1 from alltypesorc LIMIT 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
1969-10-01	1969-12-31 15:59:46.674
NULL	NULL
1969-10-01	1969-12-31 15:59:55.787
1969-10-01	1969-12-31 15:59:44.187
1969-10-01	1969-12-31 15:59:50.434
1969-10-01	1969-12-31 16:00:15.007
1969-10-01	1969-12-31 16:00:07.021
1969-10-01	1969-12-31 16:00:04.963
1969-10-01	1969-12-31 15:59:52.176
1969-10-01	1969-12-31 15:59:44.569
PREHOOK: query: select trunc(CAST(ctimestamp1 AS STRING), 'YEAR'), ctimestamp1 from alltypesorc LIMIT 10
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: select trunc(CAST(ctimestamp1 AS STRING), 'YEAR'), ctimestamp1 from alltypesorc LIMIT 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
1969-01-01	1969-12-31 15:59:46.674
NULL	NULL
1969-01-01	1969-12-31 15:59:55.787
1969-01-01	1969-12-31 15:59:44.187
1969-01-01	1969-12-31 15:59:50.434
1969-01-01	1969-12-31 16:00:15.007
1969-01-01	1969-12-31 16:00:07.021
1969-01-01	1969-12-31 16:00:04.963
1969-01-01	1969-12-31 15:59:52.176
1969-01-01	1969-12-31 15:59:44.569
PREHOOK: query: explain vectorization detail select trunc(CAST(ctimestamp1 AS DATE), 'MM') from alltypesorc
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: explain vectorization detail select trunc(CAST(ctimestamp1 AS DATE), 'MM') from alltypesorc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: alltypesorc
            Statistics: Num rows: 12288 Data size: 491520 Basic stats: COMPLETE Column stats: COMPLETE
            TableScan Vectorization:
                native: true
                vectorizationSchemaColumns: [0:ctinyint:tinyint, 1:csmallint:smallint, 2:cint:int, 3:cbigint:bigint, 4:cfloat:float, 5:cdouble:double, 6:cstring1:string, 7:cstring2:string, 8:ctimestamp1:timestamp, 9:ctimestamp2:timestamp, 10:cboolean1:boolean, 11:cboolean2:boolean, 12:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
            Select Operator
              expressions: trunc(CAST( ctimestamp1 AS DATE), 'MM') (type: string)
              outputColumnNames: _col0
              Select Vectorization:
                  className: VectorSelectOperator
                  native: true
                  projectedOutputColumnNums: [14]
                  selectExpressions: TruncDateFromDate(col 13, format MM)(children: CastTimestampToDate(col 8:timestamp) -> 13:date) -> 14:string
              Statistics: Num rows: 12288 Data size: 2260992 Basic stats: COMPLETE Column stats: COMPLETE
              File Output Operator
                compressed: false
                File Sink Vectorization:
                    className: VectorFileSinkOperator
                    native: false
                Statistics: Num rows: 12288 Data size: 2260992 Basic stats: COMPLETE Column stats: COMPLETE
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
          inputFormatFeatureSupport: [DECIMAL_64]
          featureSupportInUse: [DECIMAL_64]
          inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
          allNative: false
          usesVectorUDFAdaptor: false
          vectorized: true
          rowBatchContext:
              dataColumnCount: 12
              includeColumns: [8]
              dataColumns: ctinyint:tinyint, csmallint:smallint, cint:int, cbigint:bigint, cfloat:float, cdouble:double, cstring1:string, cstring2:string, ctimestamp1:timestamp, ctimestamp2:timestamp, cboolean1:boolean, cboolean2:boolean
              partitionColumnCount: 0
              scratchColumnTypeNames: [bigint, string]

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select trunc(CAST(ctimestamp1 AS DATE), 'MM'), ctimestamp1 from alltypesorc LIMIT 10
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: select trunc(CAST(ctimestamp1 AS DATE), 'MM'), ctimestamp1 from alltypesorc LIMIT 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
1969-12-01	1969-12-31 15:59:46.674
NULL	NULL
1969-12-01	1969-12-31 15:59:55.787
1969-12-01	1969-12-31 15:59:44.187
1969-12-01	1969-12-31 15:59:50.434
1969-12-01	1969-12-31 16:00:15.007
1969-12-01	1969-12-31 16:00:07.021
1969-12-01	1969-12-31 16:00:04.963
1969-12-01	1969-12-31 15:59:52.176
1969-12-01	1969-12-31 15:59:44.569
PREHOOK: query: select trunc(CAST(ctimestamp1 AS DATE), 'Q'), ctimestamp1 from alltypesorc LIMIT 10
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: select trunc(CAST(ctimestamp1 AS DATE), 'Q'), ctimestamp1 from alltypesorc LIMIT 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
1969-10-01	1969-12-31 15:59:46.674
NULL	NULL
1969-10-01	1969-12-31 15:59:55.787
1969-10-01	1969-12-31 15:59:44.187
1969-10-01	1969-12-31 15:59:50.434
1969-10-01	1969-12-31 16:00:15.007
1969-10-01	1969-12-31 16:00:07.021
1969-10-01	1969-12-31 16:00:04.963
1969-10-01	1969-12-31 15:59:52.176
1969-10-01	1969-12-31 15:59:44.569
PREHOOK: query: select trunc(CAST(ctimestamp1 AS DATE), 'YEAR'), ctimestamp1 from alltypesorc LIMIT 10
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: select trunc(CAST(ctimestamp1 AS DATE), 'YEAR'), ctimestamp1 from alltypesorc LIMIT 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
1969-01-01	1969-12-31 15:59:46.674
NULL	NULL
1969-01-01	1969-12-31 15:59:55.787
1969-01-01	1969-12-31 15:59:44.187
1969-01-01	1969-12-31 15:59:50.434
1969-01-01	1969-12-31 16:00:15.007
1969-01-01	1969-12-31 16:00:07.021
1969-01-01	1969-12-31 16:00:04.963
1969-01-01	1969-12-31 15:59:52.176
1969-01-01	1969-12-31 15:59:44.569
PREHOOK: query: select trunc(ctimestamp1, 'MM'), ctimestamp1 from alltypesorc WHERE ctimestamp1 IS NULL LIMIT 10
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: select trunc(ctimestamp1, 'MM'), ctimestamp1 from alltypesorc WHERE ctimestamp1 IS NULL LIMIT 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
PREHOOK: query: explain vectorization detail
select c, trunc(c,0) from trunc_number LIMIT 1
PREHOOK: type: QUERY
PREHOOK: Input: default@trunc_number
#### A masked pattern was here ####
POSTHOOK: query: explain vectorization detail
select c, trunc(c,0) from trunc_number LIMIT 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@trunc_number
#### A masked pattern was here ####
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: trunc_number
            Statistics: Num rows: 4 Data size: 32 Basic stats: COMPLETE Column stats: COMPLETE
            TableScan Vectorization:
                native: true
                vectorizationSchemaColumns: [0:c:double, 1:d:int, 2:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
            Select Operator
              expressions: c (type: double), trunc(c, 0) (type: double)
              outputColumnNames: _col0, _col1
              Select Vectorization:
                  className: VectorSelectOperator
                  native: true
                  projectedOutputColumnNums: [0, 3]
                  selectExpressions: TruncFloat(col 0, scale 0) -> 3:double
              Statistics: Num rows: 4 Data size: 64 Basic stats: COMPLETE Column stats: COMPLETE
              Limit
                Number of rows: 1
                Limit Vectorization:
                    className: VectorLimitOperator
                    native: true
                Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false
                  Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
          inputFormatFeatureSupport: [DECIMAL_64]
          featureSupportInUse: [DECIMAL_64]
          inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
          allNative: false
          usesVectorUDFAdaptor: false
          vectorized: true
          rowBatchContext:
              dataColumnCount: 2
              includeColumns: [0]
              dataColumns: c:double, d:int
              partitionColumnCount: 0
              scratchColumnTypeNames: [double]

  Stage: Stage-0
    Fetch Operator
      limit: 1
      Processor Tree:
        ListSink

PREHOOK: query: select c, 0, trunc(c,0) from trunc_number LIMIT 1
PREHOOK: type: QUERY
PREHOOK: Input: default@trunc_number
#### A masked pattern was here ####
POSTHOOK: query: select c, 0, trunc(c,0) from trunc_number LIMIT 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@trunc_number
#### A masked pattern was here ####
12345.1234	0	12345.0
PREHOOK: query: select c, -1, trunc(c,-1) from trunc_number LIMIT 1
PREHOOK: type: QUERY
PREHOOK: Input: default@trunc_number
#### A masked pattern was here ####
POSTHOOK: query: select c, -1, trunc(c,-1) from trunc_number LIMIT 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@trunc_number
#### A masked pattern was here ####
12345.1234	-1	12340.0
PREHOOK: query: select c, 1, trunc(c,1) from trunc_number LIMIT 1
PREHOOK: type: QUERY
PREHOOK: Input: default@trunc_number
#### A masked pattern was here ####
POSTHOOK: query: select c, 1, trunc(c,1) from trunc_number LIMIT 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@trunc_number
#### A masked pattern was here ####
12345.1234	1	12345.1
PREHOOK: query: explain vectorization detail
select c, trunc(CAST (c AS FLOAT),0) from trunc_number
PREHOOK: type: QUERY
PREHOOK: Input: default@trunc_number
#### A masked pattern was here ####
POSTHOOK: query: explain vectorization detail
select c, trunc(CAST (c AS FLOAT),0) from trunc_number
POSTHOOK: type: QUERY
POSTHOOK: Input: default@trunc_number
#### A masked pattern was here ####
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: trunc_number
            Statistics: Num rows: 4 Data size: 32 Basic stats: COMPLETE Column stats: COMPLETE
            TableScan Vectorization:
                native: true
                vectorizationSchemaColumns: [0:c:double, 1:d:int, 2:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
            Select Operator
              expressions: c (type: double), trunc(UDFToFloat(c), 0) (type: float)
              outputColumnNames: _col0, _col1
              Select Vectorization:
                  className: VectorSelectOperator
                  native: true
                  projectedOutputColumnNums: [0, 3]
                  selectExpressions: TruncFloat(col 0, scale 0)(children: col 0:double) -> 3:float
              Statistics: Num rows: 4 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
              File Output Operator
                compressed: false
                File Sink Vectorization:
                    className: VectorFileSinkOperator
                    native: false
                Statistics: Num rows: 4 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
          inputFormatFeatureSupport: [DECIMAL_64]
          featureSupportInUse: [DECIMAL_64]
          inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
          allNative: false
          usesVectorUDFAdaptor: false
          vectorized: true
          rowBatchContext:
              dataColumnCount: 2
              includeColumns: [0]
              dataColumns: c:double, d:int
              partitionColumnCount: 0
              scratchColumnTypeNames: [double]

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select c, 0, trunc(CAST (c AS FLOAT),0) from trunc_number LIMIT 1
PREHOOK: type: QUERY
PREHOOK: Input: default@trunc_number
#### A masked pattern was here ####
POSTHOOK: query: select c, 0, trunc(CAST (c AS FLOAT),0) from trunc_number LIMIT 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@trunc_number
#### A masked pattern was here ####
12345.1234	0	12345.0
PREHOOK: query: select c, -1, trunc(CAST (c AS FLOAT),-1) from trunc_number LIMIT 1
PREHOOK: type: QUERY
PREHOOK: Input: default@trunc_number
#### A masked pattern was here ####
POSTHOOK: query: select c, -1, trunc(CAST (c AS FLOAT),-1) from trunc_number LIMIT 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@trunc_number
#### A masked pattern was here ####
12345.1234	-1	12340.0
PREHOOK: query: select c, 1, trunc(CAST (c AS FLOAT),1) from trunc_number LIMIT 1
PREHOOK: type: QUERY
PREHOOK: Input: default@trunc_number
#### A masked pattern was here ####
POSTHOOK: query: select c, 1, trunc(CAST (c AS FLOAT),1) from trunc_number LIMIT 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@trunc_number
#### A masked pattern was here ####
12345.1234	1	12345.1
PREHOOK: query: explain vectorization detail
select c, trunc(CAST (c AS DECIMAL), 0) from trunc_number
PREHOOK: type: QUERY
PREHOOK: Input: default@trunc_number
#### A masked pattern was here ####
POSTHOOK: query: explain vectorization detail
select c, trunc(CAST (c AS DECIMAL), 0) from trunc_number
POSTHOOK: type: QUERY
POSTHOOK: Input: default@trunc_number
#### A masked pattern was here ####
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: trunc_number
            Statistics: Num rows: 4 Data size: 32 Basic stats: COMPLETE Column stats: COMPLETE
            TableScan Vectorization:
                native: true
                vectorizationSchemaColumns: [0:c:double, 1:d:int, 2:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
            Select Operator
              expressions: c (type: double), trunc(CAST( c AS decimal(10,0)), 0) (type: decimal(38,18))
              outputColumnNames: _col0, _col1
              Select Vectorization:
                  className: VectorSelectOperator
                  native: true
                  projectedOutputColumnNums: [0, 4]
                  selectExpressions: TruncDecimal(col 3, scale 0)(children: CastDoubleToDecimal(col 0:double) -> 3:decimal(10,0)) -> 4:decimal(38,18)
              Statistics: Num rows: 4 Data size: 480 Basic stats: COMPLETE Column stats: COMPLETE
              File Output Operator
                compressed: false
                File Sink Vectorization:
                    className: VectorFileSinkOperator
                    native: false
                Statistics: Num rows: 4 Data size: 480 Basic stats: COMPLETE Column stats: COMPLETE
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
          inputFormatFeatureSupport: [DECIMAL_64]
          featureSupportInUse: [DECIMAL_64]
          inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
          allNative: false
          usesVectorUDFAdaptor: false
          vectorized: true
          rowBatchContext:
              dataColumnCount: 2
              includeColumns: [0]
              dataColumns: c:double, d:int
              partitionColumnCount: 0
              scratchColumnTypeNames: [decimal(10,0), decimal(38,18)]

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select c, 0, trunc(CAST (c AS DECIMAL), 0) from trunc_number LIMIT 1
PREHOOK: type: QUERY
PREHOOK: Input: default@trunc_number
#### A masked pattern was here ####
POSTHOOK: query: select c, 0, trunc(CAST (c AS DECIMAL), 0) from trunc_number LIMIT 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@trunc_number
#### A masked pattern was here ####
12345.1234	0	12345.000000000000000000
PREHOOK: query: select c, -1, trunc(CAST (c AS DECIMAL), -1) from trunc_number LIMIT 1
PREHOOK: type: QUERY
PREHOOK: Input: default@trunc_number
#### A masked pattern was here ####
POSTHOOK: query: select c, -1, trunc(CAST (c AS DECIMAL), -1) from trunc_number LIMIT 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@trunc_number
#### A masked pattern was here ####
12345.1234	-1	12340.000000000000000000
PREHOOK: query: select c, 1, trunc(CAST (c AS DECIMAL), 1) from trunc_number LIMIT 1
PREHOOK: type: QUERY
PREHOOK: Input: default@trunc_number
#### A masked pattern was here ####
POSTHOOK: query: select c, 1, trunc(CAST (c AS DECIMAL), 1) from trunc_number LIMIT 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@trunc_number
#### A masked pattern was here ####
12345.1234	1	12345.000000000000000000
PREHOOK: query: explain vectorization detail
select c, trunc(c) from trunc_number
PREHOOK: type: QUERY
PREHOOK: Input: default@trunc_number
#### A masked pattern was here ####
POSTHOOK: query: explain vectorization detail
select c, trunc(c) from trunc_number
POSTHOOK: type: QUERY
POSTHOOK: Input: default@trunc_number
#### A masked pattern was here ####
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: trunc_number
            Statistics: Num rows: 4 Data size: 32 Basic stats: COMPLETE Column stats: COMPLETE
            TableScan Vectorization:
                native: true
                vectorizationSchemaColumns: [0:c:double, 1:d:int, 2:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
            Select Operator
              expressions: c (type: double), trunc(c) (type: double)
              outputColumnNames: _col0, _col1
              Select Vectorization:
                  className: VectorSelectOperator
                  native: true
                  projectedOutputColumnNums: [0, 3]
                  selectExpressions: VectorUDFAdaptor(trunc(c)) -> 3:double
              Statistics: Num rows: 4 Data size: 64 Basic stats: COMPLETE Column stats: COMPLETE
              File Output Operator
                compressed: false
                File Sink Vectorization:
                    className: VectorFileSinkOperator
                    native: false
                Statistics: Num rows: 4 Data size: 64 Basic stats: COMPLETE Column stats: COMPLETE
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
          inputFormatFeatureSupport: [DECIMAL_64]
          featureSupportInUse: [DECIMAL_64]
          inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
          allNative: false
          usesVectorUDFAdaptor: true
          vectorized: true
          rowBatchContext:
              dataColumnCount: 2
              includeColumns: [0]
              dataColumns: c:double, d:int
              partitionColumnCount: 0
              scratchColumnTypeNames: [double]

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: explain vectorization detail

drop table trunc_number_text
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@trunc_number_text
PREHOOK: Output: default@trunc_number_text
POSTHOOK: query: explain vectorization detail

drop table trunc_number_text
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@trunc_number_text
POSTHOOK: Output: default@trunc_number_text
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
      Drop Table Operator:
        Drop Table
          table: trunc_number_text

PREHOOK: query: drop table trunc_number
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@trunc_number
PREHOOK: Output: default@trunc_number
POSTHOOK: query: drop table trunc_number
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@trunc_number
POSTHOOK: Output: default@trunc_number
